#!/bin/bash
##############################################################################
########################### zrohyun custom aliases ###########################
##############################################################################

# Unix
alias ln="ln -v"
alias mkdir="mkdir -vp"

# handy short cuts #
alias h="history"
alias j="jobs -l"
alias c="clear"
alias now="date"
alias hg="history|grep"
alias shell="echo $SHELL"

if [[ -f /etc/hosts ]]; then
    #TODO: if $UID =0 no sudo
    host_file=/etc/hosts
    if [[ $UID == 0 ]]; then
        alias vihosts="vi $host_file"
    else
        alias vihosts="sudo vi $host_file"
    fi
    alias hosts="cat $host_file"
fi

#TODO: https://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html
#TODO: Refactor with this clause
# if [ $UID -ne 0 ]; then
#     alias reboot='sudo reboot'
#     alias update='sudo apt-get upgrade'
# fi

_ZSHRC="${XDG_CONFIG_HOME:+$XDG_CONFIG_HOME/zsh/.zshrc}"
_ZSHRC="${ZSHRC:-$HOME/.zshrc}"
alias zshrc="vi $_ZSHRC"
alias vizsh=zshrc

_BASHRC="${XDG_CONFIG_HOME:+$XDG_CONFIG_HOME/bash/.bashrc}"
_BASHRC="${BASHRC:-$HOME/.bashrc}"
alias bashrc="vi $HOME/.bashrc"
alias vibash=bashrc

if [[ $SHELL == *"zsh"* ]]; then
    alias reload="source $_ZSHRC"
    alias reomz="omz reload"
    # zshrc
    alias sourcezsh=reload
elif [[ $SHELL == *"bash"* ]] && [[ -e $_BASHRC ]]; then
    alias reload=". $_BASHRC"
fi


if [[ $machine == 'Linux' ]]; then
    alias os="uname -a && cat /etc/os-release"
    alias catos="cat /etc/os-release"
elif [[ $machine == 'Mac' ]]; then
    alias os="uname -a && sw_vers && system_profiler SPSoftwareDataType"
    alias catos=os
fi


# Pretty print the path
alias hi='tmux new -As main'

openports_() {
    # 함수 설명 추가
    # 사용법: openports [sudo] [command]
    # -P 옵션 추가하여 포트 번호 지정 가능하게 함

    local sudo_cmd="" cmd_option="" commands=("lsof" "netstat" "nmap" "ss") machine=$(uname)
    local port_range="1-65535" # 기본 포트 범위

    while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do case $1 in
        -h | --help )
            echo "Usage: openports [options] [command]"
            echo "Options:"
            echo "  -h, --help    : Print this help and exit"
            echo "  -v, --verbose : Display verbose output"
            echo "  -P            : Specify port range (default 1-65535)"
            echo "  -x            : Enable debug and trace"
            return 0
            ;;
        -v | --verbose )
            verbose=true
            ;;
        -P )
            shift; port_range=$1
            ;;
        -x )
            set -x
            ;;
        * )
            echo "Invalid option: $1" >&2
            return 1
            ;;
    esac; shift; done

    if [[ "$1" == "sudo" ]]; then
        check_and_set_sudo || return 1
        shift
    fi

    for cmd in "${commands[@]}"; do
        if command -v "$cmd" &>/dev/null; then
            execute_command "$cmd" "$port_range"
            return 0
        else
            echo "$cmd is not installed" >&2
        fi
    done

    echo "No suitable command found for checking open ports." >&2
    return 1
}

# sudo 권한 확인 및 설정 함수
check_and_set_sudo() {
    if command -v sudo &>/dev/null && sudo -v &>/dev/null; then
        sudo_cmd="sudo"
    else
        echo "Error: sudo permission is required to run this command." >&2
        return 1
    fi
}

# 명령어 실행 함수
execute_command() {
    local cmd=$1 port_range=$2
    echo "Checking open ports using $cmd..."
    case "$cmd" in
        "lsof" )
            $verbose && echo "$sudo_cmd lsof -i -P -n | awk 'NR==1 {print $1, $2, $3, $8, $9} $NF ~ /LISTEN/ {print $1, $2, $3, $8, $9}' | column -t"
            $sudo_cmd lsof -i -P -n | awk 'NR==1 {print $1, $2, $3, $8, $9} $NF ~ /LISTEN/ {print $1, $2, $3, $8, $9}' | column -t
            ;;
        "netstat" )
            # 기계별 명령어 분기 처리
            ;;
        "nmap" )
            $verbose && echo "$sudo_cmd nmap -p $port_range localhost"
            $sudo_cmd nmap -p $port_range localhost
            ;;
        # 다른 명령어 처리
    esac
}
